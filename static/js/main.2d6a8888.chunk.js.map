{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setisReversed","getCorrectMethod","name","LENGTH","ALPHABET","Error","visibleGoods","goods","sort","firstGood","secondGood","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAAmB,SAACC,GACxB,OAAQA,GACN,IAAK,UACHF,GAAeD,GACf,MAEF,IAAK,eACHD,EAAYN,EAASW,QACrB,MAEF,IAAK,YACHL,EAAYN,EAASY,UACrB,MAEF,IAAK,QACHN,EAAYN,EAASI,MACrBI,GAAc,GACd,MAEF,QACE,MAAM,IAAIK,QAIVC,EArDD,SACLC,EADK,GAGJ,IADCV,EACF,EADEA,SAAUE,EACZ,EADYA,WAENO,EAAY,YAAOC,GAkBzB,OAhBAD,EAAaE,MAAK,SAACC,EAAWC,GAC5B,OAAQb,GACN,KAAKL,EAASY,SACZ,OAAOK,EAAUE,cAAcD,GAEjC,KAAKlB,EAASW,OACZ,OAAOM,EAAUG,OAASF,EAAWE,OACvC,QACE,OAAO,MAITb,GACFO,EAAaO,UAGRP,EA+BcQ,CAAkBrB,EACrC,CAAEM,aAAYF,aAEhB,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWlB,IAAaL,EAASY,SAC7B,iBACA,0BACJa,QAAS,kBAAMhB,EAAiB,cALlC,iCAUA,wBACEe,KAAK,SACLD,UAAWlB,IAAaL,EAASW,OAC7B,oBACA,6BACJc,QAAS,kBAAMhB,EAAiB,iBALlC,4BAUA,wBACEe,KAAK,SACLD,UAAWhB,EACP,oBACA,6BACJkB,QAAS,kBAAMhB,EAAiB,YALlC,qBAUCF,GAAcF,IAAaL,EAASI,KAEjC,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAMhB,EAAiB,UAHlC,mBAQA,QAGN,6BACGK,EAAaY,KAAI,SAAAC,GAChB,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YClIrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d6a8888.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstGood.localeCompare(secondGood);\n\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setisReversed] = useState(false);\n\n  const getCorrectMethod = (name: string) => {\n    switch (name) {\n      case 'reverse':\n        setisReversed(!isReversed);\n        break;\n\n      case 'sortByLength':\n        setSortType(SortType.LENGTH);\n        break;\n\n      case 'sortByAlp':\n        setSortType(SortType.ALPHABET);\n        break;\n\n      case 'reset':\n        setSortType(SortType.NONE);\n        setisReversed(false);\n        break;\n\n      default:\n        throw new Error();\n    }\n  };\n\n  const visibleGoods = getReorderedGoods(goodsFromServer,\n    { isReversed, sortType });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={sortType === SortType.ALPHABET\n            ? 'button is-info'\n            : 'button is-info is-light'}\n          onClick={() => getCorrectMethod('sortByAlp')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={sortType === SortType.LENGTH\n            ? 'button is-success'\n            : 'button is-success is-light'}\n          onClick={() => getCorrectMethod('sortByLength')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={isReversed\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n          onClick={() => getCorrectMethod('reverse')}\n        >\n          Reverse\n        </button>\n\n        {isReversed || sortType !== SortType.NONE\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => getCorrectMethod('reset')}\n            >\n              Reset\n            </button>\n          )\n          : null}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => {\n          return (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}